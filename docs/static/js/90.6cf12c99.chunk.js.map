{"version":3,"file":"static/js/90.6cf12c99.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-new/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-new/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://react-new/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://react-new/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfoItem.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Profile_root__rJnrk\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MyPosts_title__ET8M0\",\"area\":\"MyPosts_area__zY9od\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__aSPi7\",\"item__picture\":\"Post_item__picture__dCVEp\",\"item__content\":\"Post_item__content__KMQZi\"};","import React from 'react'\nimport style from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n        <div className={style.item}>\n            <div className={style.item__picture}><img\n                src=\"https://get.wallhere.com/photo/1500x900-px-action-adventure-alien-aliens-Avatar-fantasy-fi-fighting-futuristic-sci-warrior-1635343.jpg\"\n                alt=\"\"/></div> \n            <div className={style.item__content}>\n                <p>{props.message}</p>\n                <span>likes: {props.likesCount}</span></div>\n\n\n        </div>)\n}\n\n\nexport default Post;\n","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst NewPostForm = (props) => {\n\n    return <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[requiredField,maxLength10,]}\n                       name={'newPostText'}\n                       placeholder={'type here...'} />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n\n    </form>\n}\n\nconst NewPostFormRedux = reduxForm({\n    form: \"addNewPostForm\",\n})(NewPostForm)\n\nexport default NewPostFormRedux;\n","import React from 'react'\nimport style from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport NewPostFormRedux from \"./NewPostForm\";\n\nconst MyPosts = React.memo( (props) => {\n\n    let postsElements = props.posts.map(el => (<Post key={el.id} message={el.message} likesCount={el.likesCount}/>))\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return <div>\n        <h5 className={style.title}>My Posts</h5>\n\n        <div className={style.area}>\n            <NewPostFormRedux onSubmit={onAddPost} new/>\n        </div>\n\n        {postsElements}\n\n    </div>\n})\n\nexport default MyPosts;\n","import React from 'react'\nimport MyPosts from \"./MyPosts\";\nimport {addPost} from \"../../../redux/profile-reducer\";\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n\n    return {\n        posts: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText,\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\n\nexport default MyPostsContainer\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"profileWallpaper\":\"ProfileInfo_profileWallpaper__J7Hg5\",\"mainPhoto\":\"ProfileInfo_mainPhoto__h-0uP\",\"profileOptions\":\"ProfileInfo_profileOptions__H4Gut\",\"profileInfoItem\":\"ProfileInfo_profileInfoItem__DT2aL\",\"profileFormButton\":\"ProfileInfo_profileFormButton__VxkWj\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileStatus\":\"ProfileStatus_profileStatus__y8AMW\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n        setStatus(props.status) // after calling thunk and before updating props\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            {!editMode && <span onDoubleClick={activateEditMode}>{status || 'no status...'} </span>}\r\n            {editMode && <input value={status} autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React, {useState,} from 'react'\r\nimport style from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfoItem = ({title, value}) => {\r\n    return (<div className={style.profileInfoItem}>\r\n        <div><b>{title}{\"\\u00A0: \"}</b></div>\r\n        {value}\r\n    </div>)\r\n}\r\n\r\nexport default ProfileInfoItem;\r\n","import React from 'react'\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileInfoItem from \"./ProfileInfoItem\";\r\nimport {createFormField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport styleFormsControls from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {requiredField} from \"../../../utils/validators\";\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit,initialValues,profile, error, ...props}) => {\r\n    return <form className={style.profileOptions} onSubmit={handleSubmit}>\r\n        <ProfileInfoItem title={\"Full Name\"}\r\n                         value={createFormField('your name', 'fullName',[requiredField,], Input, )}/>\r\n        <ProfileInfoItem title={\"Looking for a job\"}\r\n                         value={createFormField('', 'lookingForAJob',[], Input, {type: 'checkbox'})}/>\r\n        <ProfileInfoItem title={\"My professional skills\"}\r\n                         value={createFormField('...', 'lookingForAJobDescription',[], Textarea, )}/>\r\n        <ProfileInfoItem title={\"About me\"}\r\n                         value={createFormField('...', 'aboutMe',[], Textarea, )}/>\r\n        {Object.keys(profile.contacts).map(key => {\r\n            return <ProfileInfoItem key={key} title={key}\r\n                                    value={createFormField(`your ${key} :`, `contacts.${key}`,[], Input, )}/>\r\n        })}\r\n\r\n        <div className={style.profileFormButton}><button type={'submit'}>save</button></div>\r\n        {error && <div className={styleFormsControls.formSummaryError}>{error}</div>}\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'editProfile'})(ProfileDataForm)","import React, {useState,} from 'react'\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../Assets/Images/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileInfoItem from \"./ProfileInfoItem\";\r\n\r\nconst ProfileInfo = ({profile, status, authorizedUserId, updateUserStatus, isOwner, savePhoto, setProfile, ...props}) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmitEditProfile = (formData) => {\r\n        setProfile(formData).then(\r\n            ()=>{setEditMode(false)}\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileStatusWithHooks authorizedUserId={authorizedUserId}\r\n                                    profile={profile}\r\n                                    status={status}\r\n                                    updateUserStatus={updateUserStatus}/>\r\n\r\n            <div className={style.profileWallpaper}>\r\n                <div className={style.mainPhoto}>\r\n                    <img src={profile.photos.large || userPhoto}\r\n\r\n                         alt=\"alt\"/>\r\n                </div>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile}\r\n                                   onSubmit={onSubmitEditProfile}\r\n                                   />\r\n                : <ProfileData profile={profile}\r\n                               onEditModeProfile={()=>{setEditMode(true)}}\r\n                               isOwner={isOwner}\r\n                              />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, ...props}) => {\r\n    return <div className={style.profileOptions}>\r\n\r\n        <ProfileInfoItem key={'fullName'} title={\"Full Name\"} value={profile.fullName}/>\r\n        <ProfileInfoItem key={'lookingForAJob'} title={\"Looking for a job\"} value={profile.lookingForAJob ? 'yes' : 'no'}/>\r\n        <ProfileInfoItem key={'lookingForAJobDescription'} title={\"My professional skills\"} value={profile.lookingForAJobDescription}/>\r\n        <ProfileInfoItem key={'aboutMe'} title={\"About me\"} value={profile.aboutMe}/>\r\n        {Object.keys(profile.contacts).map(key => {\r\n            return <ProfileInfoItem key={key} title={key} value={profile.contacts[key]}/>\r\n        })}{isOwner && <div><button onClick={props.onEditModeProfile}>edit</button></div>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react'\nimport style from './Profile.module.css'\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n    return (\n        <div className={style.root}>\n            <ProfileInfo isOwner={props.isOwner} authorizedUserId={props.authorizedUserId} profile={props.profile} status={props.status}\n                         updateUserStatus={props.updateUserStatus} savePhoto={props.savePhoto} setProfile={props.setProfile}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\n\nexport default Profile;\n","import React from 'react'\nimport Profile from \"./Profile\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {getProfile, getUserStatus, savePhoto, setProfile, updateUserStatus} from \"../../redux/profile-reducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getUserStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (<Profile isOwner={!this.props.match.params.userId}\n                         authorizedUserId={this.props.authorizedUserId}\n                         status={this.props.status}\n                         savePhoto={this.props.savePhoto}\n                         setProfile={this.props.setProfile}\n                         updateUserStatus={this.props.updateUserStatus}\n                         profile={this.props.profile}\n                         {...this.props}\n            />\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return ({\n        authorizedUserId: state.auth.userId,\n        profile: state.profilePage.profile,\n        status: state.profilePage.profileStatus,\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getProfile, getUserStatus, updateUserStatus, savePhoto, setProfile}),\n    withAuthRedirect,\n    withRouter,\n)(ProfileContainer)\n\n\n"],"names":["props","className","style","src","alt","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","name","placeholder","React","postsElements","posts","map","el","id","values","addPost","newPostText","new","connect","state","profilePage","postsData","MyPosts","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","useState","editMode","setEditMode","status","setStatus","useEffect","s","onDoubleClick","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","title","profile","initialValues","error","createFormField","Input","type","Object","keys","contacts","key","styleFormsControls","ProfileData","isOwner","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","onClick","onEditModeProfile","authorizedUserId","savePhoto","setProfile","Preloader","photos","large","userPhoto","target","files","formData","then","ProfileContainer","userId","this","match","params","history","getProfile","getUserStatus","refreshProfile","prevProps","prevState","compose","auth","profileStatus","withAuthRedirect","withRouter"],"sourceRoot":""}